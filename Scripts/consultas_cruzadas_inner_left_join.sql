--Consultar tablas por separado
SELECT * FROM JOB_HISTORY;
SELECT * FROM DEPARTMENTS;

--Actualizar un registro especifico
UPDATE JOB_HISTORY
SET DEPARTMENT_ID = NULL
WHERE EMPLOYEE_ID = 200
AND   START_DATE = TO_DATE('01/07/2002','DD/MM/YYYY');
COMMIT;

--Consultar antes de hacer update
SELECT * FROM JOB_HISTORY
WHERE EMPLOYEE_ID = 200
AND   START_DATE = TO_DATE('01/07/2002','DD/MM/YYYY');


--Cruce con perdida de informacion
SELECT A.*,B.DEPARTMENT_NAME 
FROM JOB_HISTORY A
INNER JOIN DEPARTMENTS B
ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID);

--Cruce sin perdida de informacion
SELECT A.*,B.DEPARTMENT_NAME 
FROM JOB_HISTORY A
LEFT JOIN DEPARTMENTS B
ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID);

--Sintaxis alternativa del left join
SELECT A.*,B.DEPARTMENT_NAME 
FROM  JOB_HISTORY A,
      DEPARTMENTS B
WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID(+);
--En el caso del Right join el (+) va en el otro campo

--Cruce de tres tablas
SELECT C.FIRST_NAME ||' '|| C.LAST_NAME AS NAME,
      A.*,B.DEPARTMENT_NAME 
FROM JOB_HISTORY A
LEFT JOIN DEPARTMENTS B
ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
INNER JOIN EMPLOYEES C
ON (A.EMPLOYEE_ID = C.EMPLOYEE_ID);


--Cruce de CUATRO :0 tablas
SELECT C.FIRST_NAME ||' '|| C.LAST_NAME AS NAME,
       A.START_DATE,
       A.END_DATE,
       D.JOB_TITLE,
       B.DEPARTMENT_NAME 
FROM JOB_HISTORY A
LEFT JOIN DEPARTMENTS B
ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
INNER JOIN EMPLOYEES C
ON (A.EMPLOYEE_ID = C.EMPLOYEE_ID)
INNER JOIN JOBS D
ON (A.JOB_ID = D.JOB_ID);


--Cruce de CUATRO TABLAS Y PRODUCTO CARTESIANO :000000
SELECT C.FIRST_NAME ||' '|| C.LAST_NAME AS NAME,
       A.START_DATE,
       A.END_DATE,
       D.JOB_TITLE,
       B.DEPARTMENT_NAME 
FROM  JOB_HISTORY A,
      DEPARTMENTS B,
      EMPLOYEES C,
      JOBS D
WHERE A.JOB_ID = D.JOB_ID
AND A.DEPARTMENT_ID = B.DEPARTMENT_ID(+)
AND A.EMPLOYEE_ID = C.EMPLOYEE_ID;


